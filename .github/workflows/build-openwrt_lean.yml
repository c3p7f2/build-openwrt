#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
      _:
        description: ""
        required: false
        default: ""

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "$TZ"

          sudo -E swapoff -a
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php /swapfile
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Get system information
        run: |
          sudo lshw
          lscpu
          lsblk -a
          df -h

      - name: Clone source code
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt

      - name: Download packages
        run: |
          cd openwrt
          git clone https://github.com/vernesong/OpenClash.git package/luci-app-openclash
          git clone https://github.com/tuanqing/install-program package/install-program
          rm -rf package/lean/luci-theme-argon  
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone https://github.com/tuanqing/mknop

      - name: Update feeds
        run: |
          cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: |
          cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          cp $GITHUB_WORKSPACE/config-n1 openwrt/.config

      - name: Download package
        id: package
        run: |
          cd openwrt
          make download -j128
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Echo config
        run: |
          cat openwrt/.config

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "::set-output name=status::success"

      - name: Get system information
        run: |
          sudo lshw
          lscpu
          lsblk -a
          df -h

      - name: Move firmware to specified directory
        run: |
          cd openwrt/bin/targets/*/*
          mv *.gz $GITHUB_WORKSPACE/openwrt/mknop/openwrt

      - name: Organize files
        id: organize
        run: |
          cd openwrt/mknop
          sudo ./gen_openwrt -m phicomm-n1 -k latest -s 512

          cd out

          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware to WeTransfer
        id: wetransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
          echo "DOWNLOAD_LINK=$(cat wetransfer.log | grep https)" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Send me a message when the build failed or canceled
        if: failure()
        run: |
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=ðŸ”´ Build failed or canceled" >> /dev/null

      - name: Send me a message include the download link
        run: |
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=ðŸŸ¢ $DOWNLOAD_LINK" >> /dev/null

      - name: Cleanup Workflow Runs
        if: always()
        uses: GitRML/delete-workflow-runs@v1.2.1
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 7
