#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  #  push:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["x86"]
        # platform: ["x86", "n1"]

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "$TZ"

          docker rmi `docker images -q`

          sudo -E swapoff -a          
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php /swapfile
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

          curl -fsSL git.io/file-transfer | sh

      - name: Get system information
        run: |
          lsblk -a
          df -h $PWD

      - name: Clone source code
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt

      - name: Download packages
        run: |
          cd openwrt
          git clone https://github.com/vernesong/OpenClash.git package/luci-app-openclash
          git clone https://github.com/tuanqing/install-program package/install-program
          rm -rf package/lean/luci-theme-argon  
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone https://github.com/tuanqing/mknop

      - name: Update feeds
        run: |
          cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: |
          cd openwrt && ./scripts/feeds install -a

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

      - name: Upload config
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        run: |
          ./transfer wet -s -p 16 --no-progress openwrt/.config 2>&1 | tee wetransfer-config.log
          echo "$(cat wetransfer-config.log | grep https)"

      - name: Load custom configuration
        run: |
          if [ ! -f "openwrt/.config" ]; then
            echo "==> .config does not exist"
            cp $GITHUB_WORKSPACE/config-${{ matrix.platform }} openwrt/.config
          fi

      - name: Download package
        id: package
        run: |
          cd openwrt
          make download -j128
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "::set-output name=status::success"

      - name: Get system information
        run: |
          lsblk -a
          df -h $PWD

      - name: Organize files
        id: organize
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages

          if [ ${{ matrix.platform }} == "n1" ]; then
            
            mv *.gz $GITHUB_WORKSPACE/openwrt/mknop/openwrt          
            cd openwrt/mknop
            sudo ./gen_openwrt -m phicomm-n1 -k latest -s 512 
            cd out           
          fi      

            



          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware to WeTransfer
        run: |

          ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
          echo "$(cat wetransfer.log | grep https)"

      - name: Cleanup Workflow Runs
        if: always()
        uses: GitRML/delete-workflow-runs@v1.2.1
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 7
