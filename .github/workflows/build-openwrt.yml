name: ÁºñËØë OpenWrt

on:
  # push:
  schedule:
    - cron: "0 19 * * *"
  workflow_dispatch:
    inputs:
      ssh:
        description: "Debug Mode"
        required: true
        default: "true"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: ["n1", "x86", "pi-3b-plus"]
    env:
      MSG_PREFIX: "Ref: ${{ github.ref }}\nPlatform: ${{ matrix.platform }}\nCommit message: ${{ github.event.head_commit.message }}\n\n"
      REPO_URL: https://github.com/coolsnowwolf/lede
      REPO_BRANCH: master
      TZ: Asia/Shanghai

    steps:
      - name: TG Notification - üéâ
        run: |
          curl -sX POST \
          -H 'Content-Type: application/json' \
          -d '{"chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}", "text": "${{ env.MSG_PREFIX }} üéâ Building OpenWrt..."}' \
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage >> /dev/null

      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`

          sudo timedatectl set-timezone "$TZ"

          sudo -E swapoff -a

          sudo rm -rf /etc/apt/sources.list.d/*

          sudo -E apt-get -qq update
          sudo -E apt-get -qq install rclone build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig rsync

          rm -rf ~/.config/rclone
          mkdir -p ~/.config/rclone
          # ‰∏ãËΩΩÈÖçÁΩÆ
          curl -Lo ~/.config/rclone/rclone.conf "${{secrets.RCLONE_CONFIG_LINK}}"

          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php /swapfile
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Clone source code
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt

      - name: Patch zzz-default-settings
        run: |
          cp ./${{ matrix.platform }}/zzz-default-settings.patch ./openwrt
          cd openwrt
          patch -p0 < zzz-default-settings.patch

      - name: Clone package
        run: |
          cd openwrt/package

          git clone https://github.com/vernesong/OpenClash.git luci-app-openclash --depth 1

          git clone https://github.com/xiaorouji/openwrt-passwall.git --depth 1

          git clone https://github.com/jerrykuku/luci-app-vssr.git --depth 1
          git clone https://github.com/jerrykuku/lua-maxminddb.git --depth 1

          git clone https://github.com/fw876/helloworld.git --depth 1

          rm -rf lean/luci-theme-argon  

          git clone https://github.com/jerrykuku/luci-theme-argon.git --depth 1 -b 18.06
          git clone https://github.com/jerrykuku/luci-app-argon-config.git --depth 1

          git clone https://github.com/destan19/OpenAppFilter.git --depth 1

          svn co https://github.com/ophub/luci-app-amlogic/trunk/luci-app-amlogic package/luci-app-amlogic

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load configuration
        run: |

          cp $GITHUB_WORKSPACE/${{ matrix.platform }}/config $GITHUB_WORKSPACE/openwrt/.config
          cd openwrt
          # make defconfig

      - name: Make download
        run: |
          cd openwrt

          wget https://github.com/coolsnowwolf/lede/pull/6526.patch
          git apply 6526.patch


          make download -j8

      - name: Place clash-core
        run: |
          mkdir -p openwrt/package/luci-app-openclash/luci-app-openclash/root/etc/openclash/core

          if [ ${{ matrix.platform }} == "x86" ]; then
            cp openwrt/package/luci-app-openclash/core-lateset/premium/clash-linux-amd64-*.gz openwrt/package/luci-app-openclash/luci-app-openclash/root/etc/openclash/core
          else
            cp openwrt/package/luci-app-openclash/core-lateset/premium/clash-linux-armv8-*.gz openwrt/package/luci-app-openclash/luci-app-openclash/root/etc/openclash/core
          fi

          cd openwrt/package/luci-app-openclash/luci-app-openclash/root/etc/openclash/core
          gzip -d *.gz
          chmod +x *
          mv * clash_tun

      - name: Support USB flash disk boot
        if: contains(matrix.platform, 'pi-3b-plus')
        run: |
          cd openwrt          
          git apply $GITHUB_WORKSPACE/${{ matrix.platform }}/0001-support-USB-flash-disk-boot.patch

      - name: Storage Spaces
        run: |
          df -h /

      - name: ‰∏ä‰º†ÁºñËØëÁéØÂ¢É
        run: |
          7za a op-env.7z ./openwrt

          rclone copy op-env.7z github-action:/openwrt/${{ matrix.platform }}/

          rm -f op-env.7z

      - name: Compile the firmware
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j1 V=s

      - name: Storage Spaces
        run: |
          df -h /

      - name: Organize files
        if: ${{ !contains(matrix.platform, 'n1') }}
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages

          echo "PACKAGED_OUTPUTPATH=$PWD" >> $GITHUB_ENV

      - name: Package Armvirt as OpenWrt
        if: contains(matrix.platform, 'n1')
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
          PACKAGE_SOC: s905d
          KERNEL_VERSION_NAME: 5.4.137

      - name: Upload firmware
        run: |
          # Âà†Èô§tar.gz
          rm -f /opt/openwrt_packit/tmp/openwrt-armvirt-64-default-rootfs.tar.gz

          # curl -fsSL git.io/file-transfer | sh
          # ./transfer cow --block 2621440 -s -p 64 --no-progress ${PACKAGED_OUTPUTPATH} 2>&1 | tee cowtransfer.log
          # echo "DOWNLOAD_LINK=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

          rclone copy ${{ env.PACKAGED_OUTPUTPATH }} github-action:/openwrt/${{ matrix.platform }}/

      - name: TG Notification - ‚ùå
        if: ${{ !success() }}
        run: |
          curl -sX POST \
          -H 'Content-Type: application/json' \
          -d '{"chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}", "text": "${{ env.MSG_PREFIX }} ‚ùå Build failed or canceled"}' \
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage >> /dev/null

      - name: TG Notification - ‚úîÔ∏è
        if: ${{ success() }}
        run: |
          curl -sX POST \
          -H 'Content-Type: application/json' \
          -d '{"chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}", "text": "${{ env.MSG_PREFIX }} ‚úîÔ∏è Done"}' \
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage >> /dev/null
